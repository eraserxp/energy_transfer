
! a very good random number generator from Numerical recipes

      FUNCTION ran4(idum)
!Returns a uniform random deviate in the range 0.0 to 1.0, generated by pseudo-DES (DES-
!like) hashing of the 64-bit word (idums,idum), where idums was set by a previous call with
!negative idum. Also increments idum. Routine can be used to generate a random sequence
!by successive calls, leaving idum unaltered between calls; or it can randomly access the nth
!deviate in a sequence by calling with idum = n. Different sequences are initialized by calls
!with differing negative values of idum. 
      INTEGER idum
      REAL ran4
CU    USES psdes
      INTEGER idums,irword,itemp,jflmsk,jflone,lword
      REAL ftemp
      EQUIVALENCE (itemp,ftemp)
      SAVE idums,jflone,jflmsk
      DATA idums /0/, jflone /Z'3F800000'/, jflmsk /Z'007FFFFF'/
      if(idum.lt.0)then
        idums=-idum
        idum=1
      endif
      irword=idum
      lword=idums
      call psdes(lword,irword)
      itemp=ior(jflone,iand(jflmsk,irword))
      ran4=ftemp-1.0
      idum=idum+1
      return
      END


      SUBROUTINE psdes(lword,irword)
      INTEGER irword,lword,NITER
      PARAMETER (NITER=4)
      INTEGER i,ia,ib,iswap,itmph,itmpl,c1(4),c2(4)
      SAVE c1,c2
      DATA c1 /Z'BAA96887',Z'1E17D32C',Z'03BCDC3C',Z'0F33D1B2'/, c2 
     */Z'4B0F3B58',Z'E874F0C3',Z'6955C5A6', Z'55A7CA46'/
      do 11 i=1,NITER
        iswap=irword
        ia=ieor(irword,c1(i))
        itmpl=iand(ia,65535)
        itmph=iand(ishft(ia,-16),65535)
        ib=itmpl**2+not(itmph**2)
        ia=ior(ishft(ib,16),iand(ishft(ib,-16),65535))
        irword=ieor(lword,ieor(c2(i),ia)+itmpl*itmph)
        lword=iswap
11    continue
      return
      END
